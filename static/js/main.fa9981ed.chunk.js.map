{"version":3,"sources":["utils.js","GameRenderer.js","index.js"],"names":["DIRECTIONS","DEFAULT_SIZE","width","height","DEFAULT_TILE_NUM","x","y","COLORS","map","c","dark","light","lighten","calcTileSize","size","numTiles","Math","floor","GameRenderer","ctx","this","tileSize","pos","color","beginPath","ellipse","PI","fillStyle","fill","w","h","fillRect","gameState","snakes","apples","obstacles","forEach","snake","i","length","body","part","drawSquare","position","apple","drawCircle","obstacle","REACT_APP_URL","process","root","document","getElementById","canvas","createElement","getContext","appendChild","gameRenderer","socket","io","on","console","log","id","gameConfig","tileCount","setNumTiles","state","requestAnimationFrame","draw","touchStart","resizeWindow","clientWidth","clientHeight","min","setSize","addEventListener","e","dir","event","code","dirFromEvent","emit","changedTouches","screenX","screenY","dX","dY","abs","dirFromTouch","window"],"mappings":"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","file":"static/js/main.fa9981ed.chunk.js","sourcesContent":["export const DIRECTIONS = {\n  UP: \"UP\",\n  DOWN: \"DOWN\",\n  LEFT: \"LEFT\",\n  RIGHT: \"RIGHT\",\n};\n\nexport function dirFromTouch(dX, dY) {\n  if (dX === 0 && dY === 0) return null;\n  if (Math.abs(dX) > Math.abs(dY)) {\n    return dX > 0 ? \"RIGHT\" : \"LEFT\";\n  } else {\n    return dY > 0 ? \"DOWN\" : \"UP\";\n  }\n}\n\nexport function dirFromEvent(event) {\n  switch (event.code) {\n    case \"KeyA\":\n    case \"ArrowLeft\":\n      return DIRECTIONS.LEFT;\n    case \"KeyW\":\n    case \"ArrowUp\":\n      return DIRECTIONS.UP;\n    case \"KeyD\":\n    case \"ArrowRight\":\n      return DIRECTIONS.RIGHT;\n    case \"KeyS\":\n    case \"ArrowDown\":\n      return DIRECTIONS.DOWN;\n    default:\n      return null;\n  }\n}\n","import { lighten } from \"color2k\";\n\nexport const DEFAULT_SIZE = { width: 600, height: 600 };\nexport const DEFAULT_TILE_NUM = { x: 20, y: 20 };\n\n// COLORS: blue purple yellow green cyan orange\nconst DEFAULT_COLORS = [\"#002984\", \"#9c27b0\", \"#ffeb3b\", \"#4caf50\", \"#00bcd4\", \"#c66900\"];\nconst COLORS = DEFAULT_COLORS.map((c) => ({ dark: c, light: lighten(c, 0.2) }));\n\nfunction calcTileSize(size, numTiles) {\n  const { x, y } = numTiles;\n  return {\n    x: Math.floor(size.width / x),\n    y: Math.floor(size.height / y),\n  };\n}\n\nexport class GameRenderer {\n  constructor(ctx, { numTiles = DEFAULT_TILE_NUM, size = DEFAULT_SIZE }) {\n    this.ctx = ctx;\n    this.numTiles = numTiles;\n    this.size = size;\n    this.tileSize = calcTileSize(size, numTiles);\n  }\n\n  setNumTiles(numTiles) {\n    this.numTiles = numTiles;\n    this.tileSize = calcTileSize(this.size, this.numTiles);\n  }\n\n  setSize(size) {\n    this.size = size;\n    this.tileSize = calcTileSize(this.size, this.numTiles);\n  }\n\n  drawCircle(pos, color) {\n    const { x, y } = this.tileSize;\n\n    this.ctx.beginPath();\n    this.ctx.ellipse((pos.x + 0.5) * x, (pos.y + 0.5) * y, x / 2, y / 2, 0, 0, 2 * Math.PI);\n    this.ctx.fillStyle = color;\n    this.ctx.fill();\n  }\n\n  drawSquare(pos, color) {\n    const { x: w, y: h } = this.tileSize;\n\n    const pad = 2;\n    const x = pos.x * w;\n    const y = pos.y * h;\n\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(x + pad, y + pad, w - pad, h - pad);\n  }\n\n  draw(gameState) {\n    const { width, height } = this.size;\n    const { snakes = [], apples = [], obstacles = [] } = gameState;\n\n    // Draw Background\n    this.ctx.fillStyle = \"#212121\";\n    this.ctx.fillRect(0, 0, width, height);\n\n    // Draw Snakes\n    snakes.forEach((snake, i) => {\n      const color = COLORS[i % COLORS.length];\n      snake.body.forEach((part) => this.drawSquare(part, color.dark));\n      this.drawSquare(snake.position, color.light);\n    });\n\n    // Draw Apples\n    apples.forEach((apple) => {\n      this.drawCircle(apple.position, \"#FF0000\");\n    });\n\n    // Draw Obstacles\n    obstacles.forEach((obstacle) => {\n      this.drawSquare(obstacle.position, \"#CCCCCC\");\n    });\n  }\n}\n","import io from \"socket.io-client\";\nimport \"./index.css\";\nimport { dirFromEvent, dirFromTouch } from \"./utils\";\nimport { GameRenderer } from \"./GameRenderer\";\n\nconst { REACT_APP_URL } = process.env;\n\nconst root = document.getElementById(\"root\");\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nroot.appendChild(canvas);\n\n// Game setup\nconst size = { width: canvas.width, height: canvas.height };\nconst gameRenderer = new GameRenderer(ctx, { size });\n\nconst socket = io(REACT_APP_URL);\n\nsocket.on(\"connect\", () => {\n  console.log(`Connected to: ${REACT_APP_URL} - ${socket.id}`);\n});\n\nsocket.on(\"config\", handleConfig);\nsocket.on(\"tick\", handleGameChange);\n\nfunction handleConfig(gameConfig) {\n  const { tileCount } = gameConfig;\n  gameRenderer.setNumTiles({ ...tileCount });\n}\n\nfunction handleGameChange(state) {\n  requestAnimationFrame(() => gameRenderer.draw(state));\n}\n\n// event setup\nconst touchStart = { x: 0, y: 0 };\n\nroot.addEventListener(\"keydown\", handleKeyDown);\nroot.addEventListener(\"touchstart\", handleTouchStart, false);\nroot.addEventListener(\"touchend\", handleTouchEnd, false);\nwindow.addEventListener(\"resize\", resizeWindow);\n\n// TODO: review window resizing\ndocument.addEventListener(\"DOMContentLoaded\", resizeWindow, false);\n\nfunction handleKeyDown(e) {\n  const dir = dirFromEvent(e);\n  socket.emit(\"input\", dir);\n}\n\nfunction handleTouchStart(e) {\n  touchStart.x = e.changedTouches[0].screenX;\n  touchStart.y = e.changedTouches[0].screenY;\n}\n\nfunction handleTouchEnd(e) {\n  const dX = e.changedTouches[0].screenX - touchStart.x;\n  const dY = e.changedTouches[0].screenY - touchStart.y;\n  const dir = dirFromTouch(dX, dY);\n  if (dir) socket.emit(\"input\", dir);\n}\n\nfunction resizeWindow() {\n  const { clientWidth, clientHeight } = document.body || {};\n  const size = Math.min(clientWidth, clientHeight);\n  canvas.width = size;\n  canvas.height = size;\n\n  gameRenderer.setSize({ width: size, height: size });\n}\n"],"sourceRoot":""}